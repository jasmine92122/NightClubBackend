# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-03-30 12:33
from __future__ import unicode_literals

from django.db import migrations


def translate_cities_countries(apps, schema_editor):
    City = apps.get_model('places', 'City')

    COUNTRY_TRANS = {
        "Belgium": {
            "fr": "Belgique",
            "ru": "Бельгия",
            "uk": "Бельгія"
        },
        "France": {
            "fr": "France",
            "ru": "Франция",
            "uk": "Франція"
        },
        "Ukraine": {
            "fr": "Ukraine",
            "ru": "Украина",
            "uk": "Україна"
        },
    }

    CITY_TRANS = {
        "Brussels": {
            "fr": "Bruxelles",
            "ru": "Брюссель",
            "uk": "Брюссель"
        },
        "Colmar": {
            "fr": "Colmar",
            "ru": "Кольмар",
            "uk": "Кольмар"
        },
        "Toulouse": {
            "fr": "Toulouse",
            "ru": "Тулуза",
            "uk": "Тулуза"
        },
        "Vinnytsia": {
            "fr": "Vinnytsia",
            "ru": "Винница",
            "uk": "Вінниця"
        },
        "Nantes": {
            "fr": "Nantes",
            "ru": "Нант",
            "uk": "Нант"
        },
        "Lyon": {
            "fr": "Lyon",
            "ru": "Лион",
            "uk": "Ліон"
        },
        "Lille": {
            "fr": "Lille",
            "ru": "Лилль",
            "uk": "Лілль"
        },
        "Bordeaux": {
            "fr": "Bordeaux",
            "ru": "Бордо",
            "uk": "Бордо"
        },
        "Strasbourg": {
            "fr": "Strasbourg",
            "ru": "Страсбург",
            "uk": "Страсбург"
        },
        "Kyiv": {
            "fr": "Kyiv",
            "ru": "Киев",
            "uk": "Київ"
        },
        "Paris": {
            "fr": "Paris",
            "ru": "Париж",
            "uk": "Париж"
        },
    }
    for city in City.objects.all():
        if COUNTRY_TRANS.get(city.country_name, None):
            City.objects.filter(id=city.id).update(
                country_name_fr=COUNTRY_TRANS.get(city.country_name, None).get('fr'),
                country_name_ru=COUNTRY_TRANS.get(city.country_name, None).get('ru'),
                country_name_uk=COUNTRY_TRANS.get(city.country_name, None).get('uk'),
                name_fr=CITY_TRANS.get(city.name, None).get('fr'),
                name_ru=CITY_TRANS.get(city.name, None).get('ru'),
                name_uk=CITY_TRANS.get(city.name, None).get('uk'),
            )


class Migration(migrations.Migration):

    dependencies = [
        ('places', '0069_auto_20180330_1231'),
    ]

    operations = [
        migrations.RunPython(translate_cities_countries)
    ]
